@model IEnumerable<WebApplication1.Models.Event>

@{
    ViewBag.Title = "Search";
}

<h2>Index</h2>
<nav id="main-nav-wrap">
    <ul class="main-navigation">

        @if (User.Identity.IsAuthenticated)
        {
            <li >@Html.ActionLink("Home", "Index", "Home")</li>
            <li>@Html.ActionLink("About", "About", "Home")</li>
                    <li>@Html.ActionLink("Event", "Index", "Events")</li>
                    <li>@Html.ActionLink("Customer", "Index", "customers")</li>
                    <li class="current">@Html.ActionLink("Search An Event", "Search", "Events")</li>
        

                    @*<li><a> @Html.ActionLink("Home", "Index", "Home")</a></li>
                        <li><a>@Html.ActionLink("Process", "Index", "Home")</a></li>
                        <li><a>@Html.ActionLink("Features", "Index", "Home")</a></li>
                        <li><a>@Html.ActionLink("Pricing", "Index", "Home")</a></li>
                        <li><a>@Html.ActionLink("FAQs", "Index", "Home")</a></li>*@

        }
        @Html.Partial("_LoginPartial")
    </ul>


</nav>



<p>
    @Html.ActionLink("Create New", "Create")
</p>

<html>

<head>
    <title>Simple Map</title>
    <meta name="viewport" content="initial-scale=1.0">
    <meta charset="utf-8">
    <style>
        #map {
            height: 500px;
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
        }
    </style>
</head>
<body>
    
        <div style="float:left; width: 50%">
            <table class="table table-hover">
                <tr>
                    <th>
                        Event Name
                    </th>
                    <th>
                        Rate per person
                    </th>
                    <th>
                        Cusine
                    </th>
                    <th>
                        Event Time
                    </th>
                   <th>
                        Seats Available
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model)
            {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.EventName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RatePerPerson)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.cusine)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EventTime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SeatsLeft)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                            @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                        </td>
                    </tr>
                }

            </table>
        </div>
    @*<style>
        #map {
            border: 8px solid black;
 
        }
    </style>*@

    <div id="map" style="border:8px solid double;border-bottom-right-radius:5em;border-bottom-left-radius:5em;border-top-left-radius:5em;border-top-right-radius:5em; background-image:radial-gradient()">
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDwgwDdunmsSnBIyZY-rcYi-ovkf1tmUnM&callback=initMap" async defer></script>
        <script>
                function initMap()
                {
                    var map = new google.maps.Map(document.getElementById('map'));

                    // Try HTML5 geolocation.
                    if (navigator.geolocation) {
                        navigator.geolocation.getCurrentPosition(function (position) {
                            var im = 'http://maps.google.com/mapfiles/ms/micons/blue-dot.png';
                            var marker = new google.maps.Marker({ map: map, animation: google.maps.Animation.BOUNCE });
                            // var infoWindow = new google.maps.InfoWindow({map: map});
                            var pos =
                            {
                                lat: position.coords.latitude,
                                lng: position.coords.longitude
                            };

                            marker.setPosition(pos);
                            marker.setIcon(im);
                            // marker. setAnimation(BOUNCE);
                            marker.setTitle("You are here!");
                            // marker.setClickable(!0);

                            // marker.setShape(circle);
                            // infoWindow.setPosition(pos);
                            // infoWindow.setContent('You are here!');
                            map.setCenter(pos);
                            map.setMapTypeId(google.maps.MapTypeId.ROADMAP);

                            map.setZoom(15);
                            //var infoWindow;
                            var InfoWindowContent = [];
                            var i = 0;
                            @foreach (var e in Model)
                    {
                        <text>
                            var loc = new google.maps.LatLng(@e.LocationLat, @e.LocationLon, false);
                            marker = new google.maps.Marker({ map: map, position: loc });
                            InfoWindowContent[i] = '@e.EventName \n @e.Owner @Html.ActionLink("Book", "Create", new { id = @e.ID })';
                            attachSecretMessage(marker, InfoWindowContent[i]);
                            i = i + 1;
                            // infoWindow = new google.maps.InfoWindow({map: map, position: loc, Content: "@e.EventName" });
                            </text>
                    }
                        },
                        function () {
                            handleLocationError(true, infoWindow, map.getCenter());
                        });
                    }
                    else {

                        handleLocationError(false, infoWindow, map.getCenter());
                    }
                    //var i;

                    // var Eventlist = Models.Event.Select(model => model.events) ;

                }

                function attachSecretMessage(marker, secretMessage)
                {
                    var infowindow = new google.maps.InfoWindow({
                        content: secretMessage
                    });
                    marker.addListener('click', function() {
                        infowindow.open(marker.get('map'), marker);
                    });
                }
                function handleLocationError(browserHasGeolocation, infoWindow, pos) {
                    infoWindow.setPosition(pos);
                    infoWindow.setContent(browserHasGeolocation ?
                                          'Error: The Geolocation service failed.' :
                                          'Error: Your browser doesn\'t support geolocation.');
                }

        </script>
    </div>
    
</body>
</html>


@*foreach (var item in Model)
{
    <script>
    // var map = new google.maps.Map(document.getElementById('map'));
        var loc = {
            lat: @item.LocationLat,
            lng: @item.LocationLon };
        marker = new google.maps.Marker({ map: map, position: loc});
   
    </script>
}*@
