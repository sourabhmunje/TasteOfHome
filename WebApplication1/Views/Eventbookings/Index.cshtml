@model IEnumerable<WebApplication1.Models.Eventbooking>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<table class="table">

    <tr>
        <td>
            @Html.DisplayNameFor(model => model.events.EventName)
        </td>
        <td>
            @Html.DisplayNameFor(model => model.events.City)
        </td>
        <td>
            @Html.DisplayNameFor(model => model.events.EventTime)
        </td>
        <td>
            @Html.DisplayNameFor(model => model.countOfBooking)
        </td>
    </tr>
@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.events.EventName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.events.City)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.events.EventTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.countOfBooking)
        </td>
        <td>           
            @Html.ActionLink("Details", "Details", new { id = item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.ID })
        </td>
    </tr>
}

</table>

<head>
    <title>Simple Map</title>
    <meta name="viewport" content="initial-scale=1.0">
    <meta charset="utf-8">
    <style>
        #map {
            height: 500px;
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
        }
    </style>
</head>
<style>

        #map {
            border: 8px solid black;
     
        }
</style>
    <div id="map"> </div>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDwgwDdunmsSnBIyZY-rcYi-ovkf1tmUnM&callback=initMap" async defer></script>

    <script>
        function initMap()
        {
            var map = new google.maps.Map(document.getElementById('map'));
            var marker = new google.maps.Marker({ map: map, animation: google.maps.Animation.BOUNCE });

            // Try HTML5 geolocation.
            if (navigator.geolocation)
            {
                navigator.geolocation.getCurrentPosition(function (position)
                {
                    var im = 'http://maps.google.com/mapfiles/ms/micons/blue-dot.png';
                    var pos =
                    {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    marker.setPosition(pos);
                    marker.setIcon(im);
                    // marker. setAnimation(BOUNCE);
                    marker.setTitle("You are here!");
                    marker.setClickable(!0);


                    // marker.setShape(circle);
                    // infoWindow.setPosition(pos);
                    // infoWindow.setContent('You are here!');
                    map.setCenter(pos);
                    map.setMapTypeId(google.maps.MapTypeId.ROADMAP);
                    map.setZoom(15);

                },
                function ()
                {
                    handleLocationError(true, infoWindow, map.getCenter());
                });
                var i = 0;
                var EventMarker;
                var InfoWindowContent = [];
                @foreach (var e in Model)
                {
                    if (e.cust.Username == User.Identity.Name)
                    {
                        <text>
                            var loc = new google.maps.LatLng(@e.events.LocationLat, @e.events.LocationLon, false);
                            EventMarker = new google.maps.Marker({ map: map, position: loc });
                            EventMarker.setTitle('@e.events.EventName');
                            InfoWindowContent[i] = '@e.events.EventName \n @e.events.Owner';
                            attachSecretMessage(EventMarker, InfoWindowContent[i]);
                            i = i + 1;
                        </text>
                    }
                }
            }
            else
            {
                handleLocationError(false, infoWindow, map.getCenter());
            }
        }
        function attachSecretMessage(marker, secretMessage)
        {
            var infowindow = new google.maps.InfoWindow({
                content: secretMessage
            });
            marker.addListener('click', function() {
                infowindow.open(marker.get('map'), marker);
            });
        }
        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            infoWindow.setPosition(pos);
            infoWindow.setContent(browserHasGeolocation ?
                                  'Error: The Geolocation service failed.' :
                                  'Error: Your browser doesn\'t support geolocation.');
        }

    </script>
    


