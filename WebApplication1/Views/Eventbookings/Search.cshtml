@model WebApplication1.Models.Eventbooking

@{
    ViewBag.Title = "Search";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <head>
        <title>Simple Map</title>
        <meta name="viewport" content="initial-scale=1.0">
        <meta charset="utf-8">
        <style>
            #map {
                height: 500px;
            }
            /* Optional: Makes the sample page fill the window. */
            html, body {
            }
        </style>
    </head>
    <div id="map"> </div>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDwgwDdunmsSnBIyZY-rcYi-ovkf1tmUnM&callback=initMap" async defer></script>
    <script>
    function initMap()
    {
        var map = new google.maps.Map(document.getElementById('map'));
        var marker = new google.maps.Marker({ map: map, animation: google.maps.Animation.BOUNCE });

        // Try HTML5 geolocation.
        if (navigator.geolocation)
        {
            navigator.geolocation.getCurrentPosition(function (position)
            {
                var im = 'http://maps.google.com/mapfiles/ms/micons/blue-dot.png';
                var pos =
                {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };

                marker.setPosition(pos);
                marker.setIcon(im);
                // marker. setAnimation(BOUNCE);
                marker.setTitle("You are here!");
                marker.setClickable(!0);


                // marker.setShape(circle);
                // infoWindow.setPosition(pos);
                // infoWindow.setContent('You are here!');
                map.setCenter(pos);
                map.setMapTypeId(google.maps.MapTypeId.ROADMAP);
                map.setZoom(15);

            },
            function ()
            {
                handleLocationError(true, infoWindow, map.getCenter());
            });
        }
        else
        {

          handleLocationError(false, infoWindow, map.getCenter());
        }
    }

      function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
                              'Error: The Geolocation service failed.' :
                              'Error: Your browser doesn\'t support geolocation.');
      }
    </script>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
